syms j v f_2 p_3 s_1 h_1 s_2 h_2 p_4 f_1 f_2 e d g_1 g_2 x a l p_1 p_2 z w % Define symbolic variables

R_0_simpl= (d*l*(a*w + a*z + p_1*z)*(p_3^5*p_4^2*x + f_2^2*p_3^3*p_4^2*x + j^2*p_3^3*p_4^2*x + p_3^2*p_4^2*v^3*x + 3*p_3^3*p_4^2*v^2*x + e*f_1*p_3^5*v + e*h_1*p_3^5*v + f_1*h_1*p_3^5*x + e*p_3^5*p_4*v + f_1*p_3^5*p_4*x + h_1*p_3^5*p_4*x + e*f_1*p_3^3*v^3 + 2*e*f_1*p_3^4*v^2 + e*h_1*p_3^3*v^3 + 2*e*h_1*p_3^4*v^2 + e*p_3^3*p_4*v^3 + 2*e*p_3^4*p_4*v^2 + 2*f_2*p_3^4*p_4^2*x + 2*j*p_3^4*p_4^2*x + 3*p_3^4*p_4^2*v*x + h_2^2*p_3^3*p_4^2*s_2^2*x + e*f_1*f_2*p_3^2*v^3 + 3*e*f_1*f_2*p_3^3*v^2 + e*f_1*f_2^2*p_3^3*v - e*f_1*g_1*p_3^3*v^3 - 2*e*f_1*g_1*p_3^4*v^2 + e*f_2*h_1*p_3^2*v^3 + 2*e*f_2*h_1*p_3^3*v^2 + e*f_1*j*p_3^2*v^3 + 3*e*f_1*j*p_3^3*v^2 + e*f_1*j^2*p_3^3*v + f_1*f_2^2*h_1*p_3^3*x + e*h_1*j*p_3^2*v^3 + 2*e*h_1*j*p_3^3*v^2 + f_1*h_1*j^2*p_3^3*x + e*f_2*p_3^2*p_4*v^3 + 3*e*f_2*p_3^3*p_4*v^2 + e*f_2^2*p_3^3*p_4*v + f_1*f_2^2*p_3^3*p_4*x + e*j*p_3^2*p_4*v^3 + 3*e*j*p_3^3*p_4*v^2 + e*j^2*p_3^3*p_4*v - f_2*g_2*p_3^4*p_4^2*x + f_2^2*h_1*p_3^3*p_4*x + f_1*j^2*p_3^3*p_4*x + 2*f_2*j*p_3^3*p_4^2*x + h_1*j^2*p_3^3*p_4*x + f_1*h_1*p_3^2*v^3*x + 3*f_1*h_1*p_3^3*v^2*x - e*p_3^4*p_4^2*v*x + 2*h_2*p_3^4*p_4^2*s_2*x + f_1*p_3^2*p_4*v^3*x + 3*f_1*p_3^3*p_4*v^2*x + f_2*p_3*p_4^2*v^3*x + 5*f_2*p_3^3*p_4^2*v*x + h_1*p_3^2*p_4*v^3*x + 3*h_1*p_3^3*p_4*v^2*x + j*p_3*p_4^2*v^3*x + 5*j*p_3^3*p_4^2*v*x + e*f_1*f_2^2*p_3^2*v^2 + e*f_1*j^2*p_3^2*v^2 + e*f_2^2*p_3^2*p_4*v^2 + e*j^2*p_3^2*p_4*v^2 - f_2^2*g_2*p_3^3*p_4^2*x - e*p_3^2*p_4^2*v^3*x - 2*e*p_3^3*p_4^2*v^2*x + 4*f_2*p_3^2*p_4^2*v^2*x + f_2^2*p_3*p_4^2*v^2*x + 2*f_2^2*p_3^2*p_4^2*v*x + 4*j*p_3^2*p_4^2*v^2*x + j^2*p_3*p_4^2*v^2*x + 2*j^2*p_3^2*p_4^2*v*x + 2*e*f_1*f_2*p_3^4*v - e*f_1*g_1*p_3^5*v + e*f_2*h_1*p_3^4*v + 2*e*f_1*j*p_3^4*v + 2*f_1*f_2*h_1*p_3^4*x + e*h_1*j*p_3^4*v + 2*f_1*h_1*j*p_3^4*x + 2*e*f_2*p_3^4*p_4*v + 2*f_1*f_2*p_3^4*p_4*x + 2*e*j*p_3^4*p_4*v + 2*f_2*h_1*p_3^4*p_4*x + 2*f_1*j*p_3^4*p_4*x + 2*h_1*j*p_3^4*p_4*x + 3*f_1*h_1*p_3^4*v*x + 3*f_1*p_3^4*p_4*v*x + 3*h_1*p_3^4*p_4*v*x - e*f_1*g_1*j^2*p_3^2*v^2 - e*f_2^2*g_1*p_3^2*p_4*v^2 - e*g_1*j^2*p_3^2*p_4*v^2 + e*f_1*h_2^2*p_3^3*s_2^2*v + e*h_1*h_2^2*p_3^3*s_2^2*v + f_1*h_1*h_2^2*p_3^3*s_2^2*x + e*h_2^2*p_3^3*p_4*s_2^2*v - 3*e*f_2*p_3^2*p_4^2*v^2*x - e*f_2^2*p_3*p_4^2*v^2*x - e*f_2^2*p_3^2*p_4^2*v*x + f_1*h_2^2*p_3^3*p_4*s_2^2*x + 2*f_2^2*h_2*p_3^2*p_4^2*s_2*x - 3*f_2*g_2*p_3^2*p_4^2*v^2*x - f_2^2*g_2*p_3*p_4^2*v^2*x - 2*f_2^2*g_2*p_3^2*p_4^2*v*x + h_1*h_2^2*p_3^3*p_4*s_2^2*x - 3*e*j*p_3^2*p_4^2*v^2*x - e*j^2*p_3*p_4^2*v^2*x - e*j^2*p_3^2*p_4^2*v*x + h_2*j^2*p_3^2*p_4^2*s_2*x + f_2^2*h_2*p_4^2*s_2*v^2*x + 4*h_2*p_3^2*p_4^2*s_2*v^2*x - 2*e*f_1*f_2*g_1*p_3^4*v + 2*e*f_1*f_2*j*p_3^3*v - 2*e*f_1*g_1*j*p_3^4*v - f_1*f_2*g_2*h_1*p_3^4*x + 2*f_1*f_2*h_1*j*p_3^3*x - e*f_2*g_1*p_3^4*p_4*v + 2*e*f_2*j*p_3^3*p_4*v - f_1*f_2*g_2*p_3^4*p_4*x - e*g_1*j*p_3^4*p_4*v + 2*e*f_1*h_2*p_3^4*s_2*v - f_2*g_2*h_1*p_3^4*p_4*x + 2*e*h_1*h_2*p_3^4*s_2*v + 2*f_1*f_2*j*p_3^3*p_4*x + 2*f_2*h_1*j*p_3^3*p_4*x + 2*f_1*h_1*h_2*p_3^4*s_2*x + f_1*f_2*h_1*p_3*v^3*x + 5*f_1*f_2*h_1*p_3^3*v*x + f_1*h_1*j*p_3*v^3*x + 5*f_1*h_1*j*p_3^3*v*x + 2*e*h_2*p_3^4*p_4*s_2*v - e*f_1*p_3^4*p_4*v*x + 2*f_1*h_2*p_3^4*p_4*s_2*x + f_1*f_2*p_3*p_4*v^3*x + 5*f_1*f_2*p_3^3*p_4*v*x - e*h_1*p_3^4*p_4*v*x + 2*h_1*h_2*p_3^4*p_4*s_2*x + f_2*h_1*p_3*p_4*v^3*x + 5*f_2*h_1*p_3^3*p_4*v*x + f_1*j*p_3*p_4*v^3*x + 5*f_1*j*p_3^3*p_4*v*x + h_1*j*p_3*p_4*v^3*x + 5*h_1*j*p_3^3*p_4*v*x + e*f_1*h_2^2*p_3^2*s_2^2*v^2 + e*h_1*h_2^2*p_3^2*s_2^2*v^2 + e*h_2^2*p_3^2*p_4*s_2^2*v^2 + 2*f_2*h_2^2*p_3^2*p_4^2*s_2^2*x + f_2^2*h_2^2*p_3*p_4^2*s_2^2*x + h_2^2*j*p_3^2*p_4^2*s_2^2*x + f_2*h_2^2*p_4^2*s_2^2*v^2*x + f_2^2*h_2^2*p_4^2*s_2^2*v*x + h_2^2*p_3*p_4^2*s_2^2*v^2*x + 2*h_2^2*p_3^2*p_4^2*s_2^2*v*x - e*f_1*f_2*g_1*p_3^2*v^3 - 3*e*f_1*f_2*g_1*p_3^3*v^2 - e*f_1*f_2^2*g_1*p_3^3*v + 2*e*f_1*f_2*j*p_3^2*v^2 - e*f_1*g_1*j*p_3^2*v^3 - 3*e*f_1*g_1*j*p_3^3*v^2 - e*f_1*g_1*j^2*p_3^3*v - f_1*f_2^2*g_2*h_1*p_3^3*x - e*f_2*g_1*p_3^3*p_4*v^2 - e*f_2^2*g_1*p_3^3*p_4*v + 2*e*f_2*j*p_3^2*p_4*v^2 - f_1*f_2^2*g_2*p_3^3*p_4*x - e*g_1*j*p_3^3*p_4*v^2 - e*g_1*j^2*p_3^3*p_4*v + e*f_1*h_2*p_3^2*s_2*v^3 + 3*e*f_1*h_2*p_3^3*s_2*v^2 - f_2^2*g_2*h_1*p_3^3*p_4*x + e*h_1*h_2*p_3^2*s_2*v^3 + 3*e*h_1*h_2*p_3^3*s_2*v^2 - f_2*g_2*j*p_3^3*p_4^2*x + 4*f_1*f_2*h_1*p_3^2*v^2*x + f_1*f_2^2*h_1*p_3*v^2*x + 2*f_1*f_2^2*h_1*p_3^2*v*x + 4*f_1*h_1*j*p_3^2*v^2*x + f_1*h_1*j^2*p_3*v^2*x + 2*f_1*h_1*j^2*p_3^2*v*x + e*h_2*p_3^2*p_4*s_2*v^3 + 3*e*h_2*p_3^3*p_4*s_2*v^2 - e*f_1*p_3^2*p_4*v^3*x - 2*e*f_1*p_3^3*p_4*v^2*x - e*f_2*p_3*p_4^2*v^3*x - 2*e*f_2*p_3^3*p_4^2*v*x + 4*f_2*h_2*p_3^3*p_4^2*s_2*x + 4*f_1*f_2*p_3^2*p_4*v^2*x + f_1*f_2^2*p_3*p_4*v^2*x + 2*f_1*f_2^2*p_3^2*p_4*v*x - e*h_1*p_3^2*p_4*v^3*x - 2*e*h_1*p_3^3*p_4*v^2*x - f_2*g_2*p_3*p_4^2*v^3*x - 3*f_2*g_2*p_3^3*p_4^2*v*x + 4*f_2*h_1*p_3^2*p_4*v^2*x + f_2^2*h_1*p_3*p_4*v^2*x + 2*f_2^2*h_1*p_3^2*p_4*v*x - e*j*p_3*p_4^2*v^3*x - 2*e*j*p_3^3*p_4^2*v*x + 3*h_2*j*p_3^3*p_4^2*s_2*x + 4*f_1*j*p_3^2*p_4*v^2*x + f_1*j^2*p_3*p_4*v^2*x + 2*f_1*j^2*p_3^2*p_4*v*x + 2*f_2*j*p_3*p_4^2*v^2*x + 4*f_2*j*p_3^2*p_4^2*v*x + f_2*h_2*p_4^2*s_2*v^3*x + 4*h_1*j*p_3^2*p_4*v^2*x + h_1*j^2*p_3*p_4*v^2*x + 2*h_1*j^2*p_3^2*p_4*v*x + h_2*p_3*p_4^2*s_2*v^3*x + 5*h_2*p_3^3*p_4^2*s_2*v*x - e*f_1*f_2^2*g_1*p_3^2*v^2 - 2*e*f_1*f_2*g_1*j*p_3^2*v^2 - 2*e*f_2*g_1*j*p_3^2*p_4*v^2 + 4*e*f_1*f_2*h_2*p_3^2*s_2*v^2 + e*f_1*f_2^2*h_2*p_3*s_2*v^2 + 2*e*f_1*f_2^2*h_2*p_3^2*s_2*v - e*f_1*g_1*h_2*p_3^2*s_2*v^3 - 3*e*f_1*g_1*h_2*p_3^3*s_2*v^2 + 3*e*f_2*h_1*h_2*p_3^2*s_2*v^2 + 4*e*f_1*h_2*j*p_3^2*s_2*v^2 + e*f_1*h_2*j^2*p_3*s_2*v^2 + e*f_1*h_2*j^2*p_3^2*s_2*v + 2*f_1*f_2^2*h_1*h_2*p_3^2*s_2*x + 3*e*h_1*h_2*j*p_3^2*s_2*v^2 - 3*f_1*f_2*g_2*h_1*p_3^2*v^2*x - f_1*f_2^2*g_2*h_1*p_3*v^2*x - 2*f_1*f_2^2*g_2*h_1*p_3^2*v*x + f_1*h_1*h_2*j^2*p_3^2*s_2*x + 4*e*f_2*h_2*p_3^2*p_4*s_2*v^2 + e*f_2^2*h_2*p_3*p_4*s_2*v^2 + 2*e*f_2^2*h_2*p_3^2*p_4*s_2*v + f_1*f_2^2*h_1*h_2*s_2*v^2*x - 3*e*f_1*f_2*p_3^2*p_4*v^2*x - e*f_1*f_2^2*p_3*p_4*v^2*x - e*f_1*f_2^2*p_3^2*p_4*v*x + 2*f_1*f_2^2*h_2*p_3^2*p_4*s_2*x + 4*e*h_2*j*p_3^2*p_4*s_2*v^2 + e*h_2*j^2*p_3*p_4*s_2*v^2 + e*h_2*j^2*p_3^2*p_4*s_2*v + e*f_2*g_2*p_3*p_4^2*v^3*x + 2*e*f_2*g_2*p_3^3*p_4^2*v*x - 2*f_2*g_2*h_2*p_3^3*p_4^2*s_2*x - 2*e*f_2*h_1*p_3^2*p_4*v^2*x - 3*f_1*f_2*g_2*p_3^2*p_4*v^2*x - f_1*f_2^2*g_2*p_3*p_4*v^2*x - 2*f_1*f_2^2*g_2*p_3^2*p_4*v*x + 2*f_2^2*h_1*h_2*p_3^2*p_4*s_2*x - 3*e*f_1*j*p_3^2*p_4*v^2*x - e*f_1*j^2*p_3*p_4*v^2*x - e*f_1*j^2*p_3^2*p_4*v*x - 2*e*f_2*j*p_3*p_4^2*v^2*x - 2*e*f_2*j*p_3^2*p_4^2*v*x + f_1*h_2*j^2*p_3^2*p_4*s_2*x - 3*f_2*g_2*h_1*p_3^2*p_4*v^2*x - f_2^2*g_2*h_1*p_3*p_4*v^2*x - 2*f_2^2*g_2*h_1*p_3^2*p_4*v*x + 3*f_2*h_2*j*p_3^2*p_4^2*s_2*x - e*f_1*h_1*p_3^2*s_1*v^3*x - 2*e*f_1*h_1*p_3^3*s_1*v^2*x - e*f_2*h_2*p_4^2*s_2*v^3*x - 2*e*h_1*j*p_3^2*p_4*v^2*x - f_2*g_2*j*p_3*p_4^2*v^2*x - 2*f_2*g_2*j*p_3^2*p_4^2*v*x + f_1*f_2^2*h_2*p_4*s_2*v^2*x + h_1*h_2*j^2*p_3^2*p_4*s_2*x - f_2*g_2*h_2*p_4^2*s_2*v^3*x + 4*f_1*h_1*h_2*p_3^2*s_2*v^2*x + f_2^2*h_1*h_2*p_4*s_2*v^2*x + f_2*h_2*j*p_4^2*s_2*v^2*x - e*h_2*p_3*p_4^2*s_2*v^3*x - 2*e*h_2*p_3^3*p_4^2*s_2*v*x + 4*f_1*h_2*p_3^2*p_4*s_2*v^2*x + 5*f_2*h_2*p_3*p_4^2*s_2*v^2*x + 8*f_2*h_2*p_3^2*p_4^2*s_2*v*x + 3*f_2^2*h_2*p_3*p_4^2*s_2*v*x + 4*h_1*h_2*p_3^2*p_4*s_2*v^2*x + 2*h_2*j*p_3*p_4^2*s_2*v^2*x + 5*h_2*j*p_3^2*p_4^2*s_2*v*x + h_2*j^2*p_3*p_4^2*s_2*v*x + e*f_1*f_2*h_2^2*p_3*s_2^2*v^2 + 2*e*f_1*f_2*h_2^2*p_3^2*s_2^2*v + e*f_1*f_2^2*h_2^2*p_3*s_2^2*v - e*f_1*g_1*h_2^2*p_3^3*s_2^2*v + e*f_2*h_1*h_2^2*p_3*s_2^2*v^2 + e*f_2*h_1*h_2^2*p_3^2*s_2^2*v + e*f_1*h_2^2*j*p_3*s_2^2*v^2 + e*f_1*h_2^2*j*p_3^2*s_2^2*v + 2*f_1*f_2*h_1*h_2^2*p_3^2*s_2^2*x + f_1*f_2^2*h_1*h_2^2*p_3*s_2^2*x + e*h_1*h_2^2*j*p_3*s_2^2*v^2 + e*h_1*h_2^2*j*p_3^2*s_2^2*v + f_1*h_1*h_2^2*j*p_3^2*s_2^2*x + e*f_2*h_2^2*p_3*p_4*s_2^2*v^2 + 2*e*f_2*h_2^2*p_3^2*p_4*s_2^2*v + e*f_2^2*h_2^2*p_3*p_4*s_2^2*v + f_1*f_2*h_1*h_2^2*s_2^2*v^2*x + f_1*f_2^2*h_1*h_2^2*s_2^2*v*x + 2*f_1*f_2*h_2^2*p_3^2*p_4*s_2^2*x + f_1*f_2^2*h_2^2*p_3*p_4*s_2^2*x + 3*e*f_2*g_2*p_3^2*p_4^2*v^2*x + e*f_2^2*g_2*p_3*p_4^2*v^2*x + e*f_2^2*g_2*p_3^2*p_4^2*v*x + e*h_2^2*j*p_3*p_4*s_2^2*v^2 + e*h_2^2*j*p_3^2*p_4*s_2^2*v - 2*f_2^2*g_2*h_2*p_3^2*p_4^2*s_2*x + 2*f_2*h_1*h_2^2*p_3^2*p_4*s_2^2*x + f_2^2*h_1*h_2^2*p_3*p_4*s_2^2*x + f_1*h_2^2*j*p_3^2*p_4*s_2^2*x + f_2*h_2^2*j*p_3*p_4^2*s_2^2*x - e*f_2^2*h_2*p_4^2*s_2*v^2*x + f_1*f_2*h_2^2*p_4*s_2^2*v^2*x + f_1*f_2^2*h_2^2*p_4*s_2^2*v*x + h_1*h_2^2*j*p_3^2*p_4*s_2^2*x - f_2^2*g_2*h_2*p_4^2*s_2*v^2*x + f_1*h_1*h_2^2*p_3*s_2^2*v^2*x + 2*f_1*h_1*h_2^2*p_3^2*s_2^2*v*x + f_2*h_1*h_2^2*p_4*s_2^2*v^2*x + f_2^2*h_1*h_2^2*p_4*s_2^2*v*x + f_2*h_2^2*j*p_4^2*s_2^2*v*x - 3*e*h_2*p_3^2*p_4^2*s_2*v^2*x + f_1*h_2^2*p_3*p_4*s_2^2*v^2*x + 2*f_1*h_2^2*p_3^2*p_4*s_2^2*v*x + 3*f_2*h_2^2*p_3*p_4^2*s_2^2*v*x + h_1*h_2^2*p_3*p_4*s_2^2*v^2*x + 2*h_1*h_2^2*p_3^2*p_4*s_2^2*v*x + h_2^2*j*p_3*p_4^2*s_2^2*v*x - 2*e*f_1*f_2*g_1*j*p_3^3*v - f_1*f_2*g_2*h_1*j*p_3^3*x - 2*e*f_2*g_1*j*p_3^3*p_4*v + e*f_1*f_2*h_2*p_3*s_2*v^3 + 4*e*f_1*f_2*h_2*p_3^3*s_2*v - 2*e*f_1*g_1*h_2*p_3^4*s_2*v + e*f_2*h_1*h_2*p_3*s_2*v^3 + 2*e*f_2*h_1*h_2*p_3^3*s_2*v - f_1*f_2*g_2*j*p_3^3*p_4*x + e*f_1*h_2*j*p_3*s_2*v^3 + 3*e*f_1*h_2*j*p_3^3*s_2*v - f_2*g_2*h_1*j*p_3^3*p_4*x + 4*f_1*f_2*h_1*h_2*p_3^3*s_2*x + e*h_1*h_2*j*p_3*s_2*v^3 + 2*e*h_1*h_2*j*p_3^3*s_2*v - f_1*f_2*g_2*h_1*p_3*v^3*x - 3*f_1*f_2*g_2*h_1*p_3^3*v*x + 3*f_1*h_1*h_2*j*p_3^3*s_2*x + 2*f_1*f_2*h_1*j*p_3*v^2*x + 4*f_1*f_2*h_1*j*p_3^2*v*x + e*f_2*h_2*p_3*p_4*s_2*v^3 + 4*e*f_2*h_2*p_3^3*p_4*s_2*v + f_1*f_2*h_1*h_2*s_2*v^3*x - e*f_1*f_2*p_3*p_4*v^3*x - 2*e*f_1*f_2*p_3^3*p_4*v*x + 4*f_1*f_2*h_2*p_3^3*p_4*s_2*x + e*h_2*j*p_3*p_4*s_2*v^3 + 3*e*h_2*j*p_3^3*p_4*s_2*v - e*f_2*h_1*p_3*p_4*v^3*x - e*f_2*h_1*p_3^3*p_4*v*x - f_1*f_2*g_2*p_3*p_4*v^3*x - 3*f_1*f_2*g_2*p_3^3*p_4*v*x + 4*f_2*h_1*h_2*p_3^3*p_4*s_2*x - e*f_1*j*p_3*p_4*v^3*x - 2*e*f_1*j*p_3^3*p_4*v*x + 3*f_1*h_2*j*p_3^3*p_4*s_2*x - f_2*g_2*h_1*p_3*p_4*v^3*x - 3*f_2*g_2*h_1*p_3^3*p_4*v*x - e*f_1*h_1*p_3^4*s_1*v*x + 2*f_1*f_2*j*p_3*p_4*v^2*x + 4*f_1*f_2*j*p_3^2*p_4*v*x - e*h_1*j*p_3*p_4*v^3*x - e*h_1*j*p_3^3*p_4*v*x + f_1*f_2*h_2*p_4*s_2*v^3*x + 3*h_1*h_2*j*p_3^3*p_4*s_2*x + 2*f_2*h_1*j*p_3*p_4*v^2*x + 4*f_2*h_1*j*p_3^2*p_4*v*x + f_1*h_1*h_2*p_3*s_2*v^3*x + 5*f_1*h_1*h_2*p_3^3*s_2*v*x + f_2*h_1*h_2*p_4*s_2*v^3*x + f_1*h_2*p_3*p_4*s_2*v^3*x + 5*f_1*h_2*p_3^3*p_4*s_2*v*x + h_1*h_2*p_3*p_4*s_2*v^3*x + 5*h_1*h_2*p_3^3*p_4*s_2*v*x - e*f_1*g_1*h_2^2*p_3^2*s_2^2*v^2 - f_2*g_2*h_2^2*p_3^2*p_4^2*s_2^2*x - f_2^2*g_2*h_2^2*p_3*p_4^2*s_2^2*x - e*f_2*h_2^2*p_4^2*s_2^2*v^2*x - e*f_2^2*h_2^2*p_4^2*s_2^2*v*x - f_2*g_2*h_2^2*p_4^2*s_2^2*v^2*x - f_2^2*g_2*h_2^2*p_4^2*s_2^2*v*x - e*h_2^2*p_3*p_4^2*s_2^2*v^2*x - e*h_2^2*p_3^2*p_4^2*s_2^2*v*x - e*f_1*f_2*g_1*h_2*p_3*s_2*v^3 - 4*e*f_1*f_2*g_1*h_2*p_3^3*s_2*v + 2*e*f_1*f_2*h_2*j*p_3*s_2*v^2 + 3*e*f_1*f_2*h_2*j*p_3^2*s_2*v - e*f_1*g_1*h_2*j*p_3*s_2*v^3 - 3*e*f_1*g_1*h_2*j*p_3^3*s_2*v + e*f_1*f_2*g_2*h_1*p_3^3*v*x - 2*f_1*f_2*g_2*h_1*h_2*p_3^3*s_2*x + 3*f_1*f_2*h_1*h_2*j*p_3^2*s_2*x - f_1*f_2*g_2*h_1*j*p_3*v^2*x - 2*f_1*f_2*g_2*h_1*j*p_3^2*v*x - 2*e*f_2*g_1*h_2*p_3^3*p_4*s_2*v - f_1*f_2*g_2*h_1*h_2*s_2*v^3*x + e*f_1*f_2*g_2*p_3*p_4*v^3*x + 2*e*f_1*f_2*g_2*p_3^3*p_4*v*x + 2*e*f_2*h_2*j*p_3*p_4*s_2*v^2 + 3*e*f_2*h_2*j*p_3^2*p_4*s_2*v - 2*f_1*f_2*g_2*h_2*p_3^3*p_4*s_2*x + f_1*f_2*h_1*h_2*j*s_2*v^2*x - e*g_1*h_2*j*p_3^3*p_4*s_2*v + e*f_2*g_2*h_1*p_3*p_4*v^3*x + 2*e*f_2*g_2*h_1*p_3^3*p_4*v*x - 2*e*f_1*f_2*j*p_3*p_4*v^2*x - 2*e*f_1*f_2*j*p_3^2*p_4*v*x - 2*f_2*g_2*h_1*h_2*p_3^3*p_4*s_2*x + 3*f_1*f_2*h_2*j*p_3^2*p_4*s_2*x - e*f_1*f_2*h_1*p_3*s_1*v^3*x - 2*e*f_1*f_2*h_1*p_3^3*s_1*v*x - e*f_1*f_2*h_2*p_4*s_2*v^3*x - f_1*f_2*g_2*j*p_3*p_4*v^2*x - 2*f_1*f_2*g_2*j*p_3^2*p_4*v*x + 3*f_2*h_1*h_2*j*p_3^2*p_4*s_2*x - e*f_2*h_1*h_2*p_4*s_2*v^3*x - f_1*f_2*g_2*h_2*p_4*s_2*v^3*x - f_2*g_2*h_1*j*p_3*p_4*v^2*x - 2*f_2*g_2*h_1*j*p_3^2*p_4*v*x + 5*f_1*f_2*h_1*h_2*p_3*s_2*v^2*x + 8*f_1*f_2*h_1*h_2*p_3^2*s_2*v*x + 3*f_1*f_2^2*h_1*h_2*p_3*s_2*v*x - e*f_1*h_1*j*p_3*s_1*v^3*x - 2*e*f_1*h_1*j*p_3^3*s_1*v*x - f_2*g_2*h_1*h_2*p_4*s_2*v^3*x + f_1*f_2*h_2*j*p_4*s_2*v^2*x + 2*f_1*h_1*h_2*j*p_3*s_2*v^2*x + 5*f_1*h_1*h_2*j*p_3^2*s_2*v*x + f_1*h_1*h_2*j^2*p_3*s_2*v*x + f_2*h_1*h_2*j*p_4*s_2*v^2*x - e*f_2*h_1*p_3^3*p_4*s_1*v*x - e*f_1*h_2*p_3*p_4*s_2*v^3*x - 2*e*f_1*h_2*p_3^3*p_4*s_2*v*x + 5*f_1*f_2*h_2*p_3*p_4*s_2*v^2*x + 8*f_1*f_2*h_2*p_3^2*p_4*s_2*v*x + 3*f_1*f_2^2*h_2*p_3*p_4*s_2*v*x - e*h_1*h_2*p_3*p_4*s_2*v^3*x - 2*e*h_1*h_2*p_3^3*p_4*s_2*v*x + 5*f_2*h_1*h_2*p_3*p_4*s_2*v^2*x + 8*f_2*h_1*h_2*p_3^2*p_4*s_2*v*x + 3*f_2^2*h_1*h_2*p_3*p_4*s_2*v*x - e*h_1*j*p_3^3*p_4*s_1*v*x + 2*f_1*h_2*j*p_3*p_4*s_2*v^2*x + 5*f_1*h_2*j*p_3^2*p_4*s_2*v*x + f_1*h_2*j^2*p_3*p_4*s_2*v*x + 4*f_2*h_2*j*p_3*p_4^2*s_2*v*x + 2*h_1*h_2*j*p_3*p_4*s_2*v^2*x + 5*h_1*h_2*j*p_3^2*p_4*s_2*v*x + h_1*h_2*j^2*p_3*p_4*s_2*v*x + e*f_2*g_2*h_2^2*p_4^2*s_2^2*v^2*x + e*f_2^2*g_2*h_2^2*p_4^2*s_2^2*v*x - 4*e*f_1*f_2*g_1*h_2*p_3^2*s_2*v^2 - e*f_1*f_2^2*g_1*h_2*p_3*s_2*v^2 - 2*e*f_1*f_2^2*g_1*h_2*p_3^2*s_2*v + e*f_1*f_2*h_2^2*j*p_3*s_2^2*v - 4*e*f_1*g_1*h_2*j*p_3^2*s_2*v^2 - e*f_1*g_1*h_2*j^2*p_3*s_2*v^2 - e*f_1*g_1*h_2*j^2*p_3^2*s_2*v + e*f_1*f_2*g_2*h_1*p_3^2*v^2*x - 2*f_1*f_2^2*g_2*h_1*h_2*p_3^2*s_2*x + f_1*f_2*h_1*h_2^2*j*p_3*s_2^2*x - e*f_2*g_1*h_2*p_3^2*p_4*s_2*v^2 - e*f_2^2*g_1*h_2*p_3*p_4*s_2*v^2 - 2*e*f_2^2*g_1*h_2*p_3^2*p_4*s_2*v - f_1*f_2^2*g_2*h_1*h_2*s_2*v^2*x + 3*e*f_1*f_2*g_2*p_3^2*p_4*v^2*x + e*f_1*f_2^2*g_2*p_3*p_4*v^2*x + e*f_1*f_2^2*g_2*p_3^2*p_4*v*x + e*f_2*h_2^2*j*p_3*p_4*s_2^2*v - 2*f_1*f_2^2*g_2*h_2*p_3^2*p_4*s_2*x + f_1*f_2*h_1*h_2^2*j*s_2^2*v*x - e*g_1*h_2*j*p_3^2*p_4*s_2*v^2 - e*g_1*h_2*j^2*p_3*p_4*s_2*v^2 - e*g_1*h_2*j^2*p_3^2*p_4*s_2*v + 3*e*f_2*g_2*h_1*p_3^2*p_4*v^2*x - 2*f_2^2*g_2*h_1*h_2*p_3^2*p_4*s_2*x + f_1*f_2*h_2^2*j*p_3*p_4*s_2^2*x + e*f_2*g_2*j*p_3*p_4^2*v^2*x + e*f_2*g_2*j*p_3^2*p_4^2*v*x - 3*e*f_1*f_2*h_1*p_3^2*s_1*v^2*x - e*f_1*f_2^2*h_1*p_3*s_1*v^2*x - e*f_1*f_2^2*h_1*p_3^2*s_1*v*x - e*f_1*f_2^2*h_2*p_4*s_2*v^2*x - 2*f_2*g_2*h_2*j*p_3^2*p_4^2*s_2*x + e*f_2*g_2*h_2*p_4^2*s_2*v^3*x + f_2*h_1*h_2^2*j*p_3*p_4*s_2^2*x - f_1*f_2^2*g_2*h_2*p_4*s_2*v^2*x + 3*f_1*f_2*h_1*h_2^2*p_3*s_2^2*v*x - 3*e*f_1*h_1*j*p_3^2*s_1*v^2*x - e*f_1*h_1*j^2*p_3*s_1*v^2*x - e*f_1*h_1*j^2*p_3^2*s_1*v*x - e*f_2*h_2*j*p_4^2*s_2*v^2*x - f_2^2*g_2*h_1*h_2*p_4*s_2*v^2*x + f_1*f_2*h_2^2*j*p_4*s_2^2*v*x - f_2*g_2*h_2*j*p_4^2*s_2*v^2*x + f_1*h_1*h_2^2*j*p_3*s_2^2*v*x + f_2*h_1*h_2^2*j*p_4*s_2^2*v*x - e*f_2*h_1*p_3^2*p_4*s_1*v^2*x - e*f_2^2*h_1*p_3*p_4*s_1*v^2*x - e*f_2^2*h_1*p_3^2*p_4*s_1*v*x - 3*e*f_1*h_2*p_3^2*p_4*s_2*v^2*x - 4*e*f_2*h_2*p_3*p_4^2*s_2*v^2*x - 4*e*f_2*h_2*p_3^2*p_4^2*s_2*v*x - 2*e*f_2^2*h_2*p_3*p_4^2*s_2*v*x + 3*f_1*f_2*h_2^2*p_3*p_4*s_2^2*v*x - 3*e*h_1*h_2*p_3^2*p_4*s_2*v^2*x - 4*f_2*g_2*h_2*p_3*p_4^2*s_2*v^2*x - 5*f_2*g_2*h_2*p_3^2*p_4^2*s_2*v*x - 3*f_2^2*g_2*h_2*p_3*p_4^2*s_2*v*x + 3*f_2*h_1*h_2^2*p_3*p_4*s_2^2*v*x - e*h_1*j*p_3^2*p_4*s_1*v^2*x - e*h_1*j^2*p_3*p_4*s_1*v^2*x - e*h_1*j^2*p_3^2*p_4*s_1*v*x - e*h_2*j*p_3*p_4^2*s_2*v^2*x - e*h_2*j*p_3^2*p_4^2*s_2*v*x + f_1*h_2^2*j*p_3*p_4*s_2^2*v*x + h_1*h_2^2*j*p_3*p_4*s_2^2*v*x - e*f_1*f_2*g_1*h_2^2*p_3*s_2^2*v^2 - 2*e*f_1*f_2*g_1*h_2^2*p_3^2*s_2^2*v - e*f_1*f_2^2*g_1*h_2^2*p_3*s_2^2*v - e*f_1*g_1*h_2^2*j*p_3*s_2^2*v^2 - e*f_1*g_1*h_2^2*j*p_3^2*s_2^2*v - f_1*f_2*g_2*h_1*h_2^2*p_3^2*s_2^2*x - f_1*f_2^2*g_2*h_1*h_2^2*p_3*s_2^2*x - e*f_2*g_1*h_2^2*p_3^2*p_4*s_2^2*v - e*f_2^2*g_1*h_2^2*p_3*p_4*s_2^2*v - f_1*f_2*g_2*h_1*h_2^2*s_2^2*v^2*x - f_1*f_2^2*g_2*h_1*h_2^2*s_2^2*v*x - f_1*f_2*g_2*h_2^2*p_3^2*p_4*s_2^2*x - f_1*f_2^2*g_2*h_2^2*p_3*p_4*s_2^2*x - f_2*g_2*h_1*h_2^2*p_3^2*p_4*s_2^2*x - f_2^2*g_2*h_1*h_2^2*p_3*p_4*s_2^2*x - e*f_1*f_2*h_2^2*p_4*s_2^2*v^2*x - e*f_1*f_2^2*h_2^2*p_4*s_2^2*v*x - f_2*g_2*h_2^2*j*p_3*p_4^2*s_2^2*x + e*f_2^2*g_2*h_2*p_4^2*s_2*v^2*x - e*f_2*h_1*h_2^2*p_4*s_2^2*v^2*x - f_1*f_2*g_2*h_2^2*p_4*s_2^2*v^2*x - f_1*f_2^2*g_2*h_2^2*p_4*s_2^2*v*x - e*f_2*h_2^2*j*p_4^2*s_2^2*v*x - f_2*g_2*h_1*h_2^2*p_4*s_2^2*v^2*x - f_2^2*g_2*h_1*h_2^2*p_4*s_2^2*v*x - f_2*g_2*h_2^2*j*p_4^2*s_2^2*v*x - e*f_1*h_2^2*p_3*p_4*s_2^2*v^2*x - e*f_1*h_2^2*p_3^2*p_4*s_2^2*v*x - 2*e*f_2*h_2^2*p_3*p_4^2*s_2^2*v*x - e*h_1*h_2^2*p_3*p_4*s_2^2*v^2*x - e*h_1*h_2^2*p_3^2*p_4*s_2^2*v*x - 2*f_2*g_2*h_2^2*p_3*p_4^2*s_2^2*v*x + 4*f_1*f_2*h_1*h_2*j*p_3*s_2*v*x + 4*f_1*f_2*h_2*j*p_3*p_4*s_2*v*x + 4*f_2*h_1*h_2*j*p_3*p_4*s_2*v*x + e*f_1*f_2*g_2*h_2^2*p_4*s_2^2*v^2*x + e*f_1*f_2^2*g_2*h_2^2*p_4*s_2^2*v*x + e*f_2*g_2*h_1*h_2^2*p_4*s_2^2*v^2*x + e*f_2*g_2*h_2^2*j*p_4^2*s_2^2*v*x - e*f_1*f_2*h_1*h_2^2*s_1*s_2^2*v^2*x - e*f_1*f_2^2*h_1*h_2^2*s_1*s_2^2*v*x + 2*e*f_2*g_2*h_2^2*p_3*p_4^2*s_2^2*v*x - e*f_1*h_1*h_2^2*p_3*s_1*s_2^2*v^2*x - e*f_1*h_1*h_2^2*p_3^2*s_1*s_2^2*v*x - e*f_2^2*h_1*h_2^2*p_4*s_1*s_2^2*v*x - 2*e*f_1*f_2*g_1*h_2*j*p_3*s_2*v^2 - 3*e*f_1*f_2*g_1*h_2*j*p_3^2*s_2*v - 2*f_1*f_2*g_2*h_1*h_2*j*p_3^2*s_2*x - 2*e*f_2*g_1*h_2*j*p_3*p_4*s_2*v^2 - 3*e*f_2*g_1*h_2*j*p_3^2*p_4*s_2*v - f_1*f_2*g_2*h_1*h_2*j*s_2*v^2*x + e*f_1*f_2*g_2*j*p_3*p_4*v^2*x + e*f_1*f_2*g_2*j*p_3^2*p_4*v*x - 2*f_1*f_2*g_2*h_2*j*p_3^2*p_4*s_2*x + e*f_1*f_2*g_2*h_1*p_3*s_1*v^3*x + e*f_1*f_2*g_2*h_1*p_3^3*s_1*v*x + e*f_1*f_2*g_2*h_2*p_4*s_2*v^3*x - 2*f_2*g_2*h_1*h_2*j*p_3^2*p_4*s_2*x + e*f_2*g_2*h_1*h_2*p_4*s_2*v^3*x - 2*e*f_1*f_2*h_1*j*p_3*s_1*v^2*x - 2*e*f_1*f_2*h_1*j*p_3^2*s_1*v*x - e*f_1*f_2*h_2*j*p_4*s_2*v^2*x - 4*f_1*f_2*g_2*h_1*h_2*p_3*s_2*v^2*x - 5*f_1*f_2*g_2*h_1*h_2*p_3^2*s_2*v*x - 3*f_1*f_2^2*g_2*h_1*h_2*p_3*s_2*v*x - e*f_1*f_2*h_1*h_2*s_1*s_2*v^3*x + e*f_1*h_1*h_2*j*p_3*s_2*v^2*x + e*f_1*h_1*h_2*j*p_3^2*s_2*v*x - f_1*f_2*g_2*h_2*j*p_4*s_2*v^2*x - f_2*g_2*h_1*h_2*j*p_4*s_2*v^2*x - 4*e*f_1*f_2*h_2*p_3*p_4*s_2*v^2*x - 4*e*f_1*f_2*h_2*p_3^2*p_4*s_2*v*x - 2*e*f_1*f_2^2*h_2*p_3*p_4*s_2*v*x - 3*e*f_2*h_1*h_2*p_3*p_4*s_2*v^2*x - 2*e*f_2*h_1*h_2*p_3^2*p_4*s_2*v*x - 4*f_1*f_2*g_2*h_2*p_3*p_4*s_2*v^2*x - 5*f_1*f_2*g_2*h_2*p_3^2*p_4*s_2*v*x - 3*f_1*f_2^2*g_2*h_2*p_3*p_4*s_2*v*x - 2*e*f_2*h_1*j*p_3*p_4*s_1*v^2*x - 2*e*f_2*h_1*j*p_3^2*p_4*s_1*v*x - e*f_1*h_2*j*p_3*p_4*s_2*v^2*x - e*f_1*h_2*j*p_3^2*p_4*s_2*v*x - 2*e*f_2*h_2*j*p_3*p_4^2*s_2*v*x - 4*f_2*g_2*h_1*h_2*p_3*p_4*s_2*v^2*x - 5*f_2*g_2*h_1*h_2*p_3^2*p_4*s_2*v*x - 3*f_2^2*g_2*h_1*h_2*p_3*p_4*s_2*v*x - e*f_1*h_1*h_2*p_3*s_1*s_2*v^3*x - 2*e*f_1*h_1*h_2*p_3^3*s_1*s_2*v*x - 3*f_2*g_2*h_2*j*p_3*p_4^2*s_2*v*x - e*f_1*f_2*g_1*h_2^2*j*p_3*s_2^2*v - f_1*f_2*g_2*h_1*h_2^2*j*p_3*s_2^2*x - e*f_1*f_2*h_1*h_2^2*j*s_2^2*v*x - e*f_2*g_1*h_2^2*j*p_3*p_4*s_2^2*v - f_1*f_2*g_2*h_1*h_2^2*j*s_2^2*v*x - f_1*f_2*g_2*h_2^2*j*p_3*p_4*s_2^2*x + 2*e*f_1*f_2*g_2*h_1*p_3^2*s_1*v^2*x + e*f_1*f_2^2*g_2*h_1*p_3*s_1*v^2*x + e*f_1*f_2^2*g_2*h_1*p_3^2*s_1*v*x + e*f_1*f_2^2*g_2*h_2*p_4*s_2*v^2*x - f_2*g_2*h_1*h_2^2*j*p_3*p_4*s_2^2*x - e*f_1*f_2*h_2^2*j*p_4*s_2^2*v*x - 2*f_1*f_2*g_2*h_1*h_2^2*p_3*s_2^2*v*x + e*f_2*g_2*h_2*j*p_4^2*s_2*v^2*x - e*f_1*f_2^2*h_1*h_2*s_1*s_2*v^2*x - e*f_2*h_1*h_2^2*j*p_4*s_2^2*v*x - f_1*f_2*g_2*h_2^2*j*p_4*s_2^2*v*x - f_2*g_2*h_1*h_2^2*j*p_4*s_2^2*v*x - 2*e*f_1*f_2*h_2^2*p_3*p_4*s_2^2*v*x + e*f_2^2*g_2*h_1*p_3*p_4*s_1*v^2*x + e*f_2^2*g_2*h_1*p_3^2*p_4*s_1*v*x + 4*e*f_2*g_2*h_2*p_3*p_4^2*s_2*v^2*x + 4*e*f_2*g_2*h_2*p_3^2*p_4^2*s_2*v*x + 2*e*f_2^2*g_2*h_2*p_3*p_4^2*s_2*v*x - e*f_2*h_1*h_2^2*p_3*p_4*s_2^2*v*x - 2*f_1*f_2*g_2*h_2^2*p_3*p_4*s_2^2*v*x - 2*f_2*g_2*h_1*h_2^2*p_3*p_4*s_2^2*v*x - 3*e*f_1*h_1*h_2*p_3^2*s_1*s_2*v^2*x - e*f_2^2*h_1*h_2*p_4*s_1*s_2*v^2*x - e*f_1*f_2*h_1*h_2*j*s_1*s_2*v^2*x + 4*e*f_1*f_2*g_2*h_2*p_3*p_4*s_2*v^2*x + 4*e*f_1*f_2*g_2*h_2*p_3^2*p_4*s_2*v*x + 2*e*f_1*f_2^2*g_2*h_2*p_3*p_4*s_2*v*x + 4*e*f_2*g_2*h_1*h_2*p_3*p_4*s_2*v^2*x + 4*e*f_2*g_2*h_1*h_2*p_3^2*p_4*s_2*v*x + e*f_2*g_2*h_1*j*p_3*p_4*s_1*v^2*x + e*f_2*g_2*h_1*j*p_3^2*p_4*s_1*v*x + 2*e*f_2*g_2*h_2*j*p_3*p_4^2*s_2*v*x - 4*e*f_1*f_2*h_1*h_2*p_3*s_1*s_2*v^2*x - 4*e*f_1*f_2*h_1*h_2*p_3^2*s_1*s_2*v*x - 2*e*f_1*f_2^2*h_1*h_2*p_3*s_1*s_2*v*x - 2*e*f_1*h_1*h_2*j*p_3*s_1*s_2*v^2*x - 2*e*f_1*h_1*h_2*j*p_3^2*s_1*s_2*v*x - e*f_2*h_1*h_2*j*p_4*s_1*s_2*v^2*x - e*f_2*h_1*h_2*p_3*p_4*s_1*s_2*v^2*x - 2*e*f_2*h_1*h_2*p_3^2*p_4*s_1*s_2*v*x - 2*e*f_2^2*h_1*h_2*p_3*p_4*s_1*s_2*v*x - e*h_1*h_2*j*p_3*p_4*s_1*s_2*v^2*x - e*h_1*h_2*j*p_3^2*p_4*s_1*s_2*v*x + e*f_1*f_2*g_2*h_1*h_2^2*j*s_2^2*v*x + e*f_1*f_2*g_2*h_1*h_2^2*p_3*s_2^2*v*x + e*f_1*f_2*g_2*h_2^2*j*p_4*s_2^2*v*x + e*f_1*f_2^2*g_2*h_1*h_2*s_1*s_2*v^2*x + e*f_2*g_2*h_1*h_2^2*j*p_4*s_2^2*v*x + 2*e*f_1*f_2*g_2*h_2^2*p_3*p_4*s_2^2*v*x + 2*e*f_2*g_2*h_1*h_2^2*p_3*p_4*s_2^2*v*x - 2*e*f_1*f_2*h_1*h_2^2*p_3*s_1*s_2^2*v*x + e*f_2^2*g_2*h_1*h_2*p_4*s_1*s_2*v^2*x - e*f_2*h_1*h_2^2*p_3*p_4*s_1*s_2^2*v*x - 3*f_1*f_2*g_2*h_1*h_2*j*p_3*s_2*v*x - 2*e*f_1*f_2*h_2*j*p_3*p_4*s_2*v*x - 3*f_1*f_2*g_2*h_2*j*p_3*p_4*s_2*v*x - 3*f_2*g_2*h_1*h_2*j*p_3*p_4*s_2*v*x + e*f_1*f_2*g_2*h_1*h_2^2*s_1*s_2^2*v^2*x + e*f_1*f_2^2*g_2*h_1*h_2^2*s_1*s_2^2*v*x + e*f_2^2*g_2*h_1*h_2^2*p_4*s_1*s_2^2*v*x + e*f_1*f_2*g_2*h_1*h_2*p_3*s_2*v^2*x + 2*e*f_1*f_2*g_2*h_1*h_2*p_3^2*s_2*v*x + e*f_1*f_2*g_2*h_1*j*p_3*s_1*v^2*x + e*f_1*f_2*g_2*h_1*j*p_3^2*s_1*v*x + e*f_1*f_2*g_2*h_2*j*p_4*s_2*v^2*x + e*f_1*f_2*g_2*h_1*h_2*s_1*s_2*v^3*x + e*f_1*f_2*g_2*h_1*h_2*j*p_3*s_2*v*x + 2*e*f_1*f_2*g_2*h_2*j*p_3*p_4*s_2*v*x + e*f_2*g_2*h_1*h_2*j*p_3*p_4*s_2*v*x - 2*e*f_1*f_2*h_1*h_2*j*p_3*s_1*s_2*v*x - 2*e*f_2*h_1*h_2*j*p_3*p_4*s_1*s_2*v*x + e*f_1*f_2*g_2*h_1*h_2*j*s_1*s_2*v^2*x + 3*e*f_1*f_2*g_2*h_1*h_2*p_3*s_1*s_2*v^2*x + 2*e*f_1*f_2*g_2*h_1*h_2*p_3^2*s_1*s_2*v*x + 2*e*f_1*f_2^2*g_2*h_1*h_2*p_3*s_1*s_2*v*x + e*f_2*g_2*h_1*h_2*j*p_4*s_1*s_2*v^2*x + 2*e*f_2^2*g_2*h_1*h_2*p_3*p_4*s_1*s_2*v*x + e*f_1*f_2*g_2*h_1*h_2^2*p_3*s_1*s_2^2*v*x + e*f_1*f_2*g_2*h_1*h_2*j*p_3*s_1*s_2*v*x + e*f_2*g_2*h_1*h_2*j*p_3*p_4*s_1*s_2*v*x))/(p_2*p_3*(p_3 + h_2*s_2)*(a + p_1)*(f_1 + p_4)*(h_1 + p_4)*(p_3 + v)*(p_3 + v + h_2*s_2)*(f_2 + j + p_3)*(f_2 + j + p_3 + v));

%Partial derivative of R_0_simpl:

d_d = diff(R_0_simpl, d);
d_p_1 = diff(R_0_simpl, p_1);
d_p_2 = diff(R_0_simpl, p_2);
d_p_3 = diff(R_0_simpl, p_3);
d_p_4 = diff(R_0_simpl, p_4);
d_x = diff(R_0_simpl, x);
d_a = diff(R_0_simpl, a);
d_v = diff(R_0_simpl, v);
d_z = diff(R_0_simpl, z);
d_h_1 = diff(R_0_simpl, h_1);
d_g_1 = diff(R_0_simpl, g_1);
d_s_1 = diff(R_0_simpl, s_1);
d_e = diff(R_0_simpl, e);
d_l = diff(R_0_simpl, l);
d_f_1 = diff(R_0_simpl, f_1);


%Value of parameter for R0 estimation
values = [d, 0.0003996096; g_1, 0.5; g_2, 0; x, 0.7; e, 0.13; s_1, 0.7; s_2, 0; v, 1/4; j, 0; f_1, 0.90; f_2, 0; h_1, 1/10; h_2, 1/10; p_1, 1/6; p_2, 1/6; p_3, 1/6; p_4, 1/12; l, 76; a, 0.32; z, 0.22; w, 0.78];

%Numeric result of partial derivatives
d_d_val = double(subs(d_d, values(:,1), values(:,2)));
d_p_1_val = double(subs(d_p_1, values(:,1), values(:,2)));
d_p_2_val = double(subs(d_p_2, values(:,1), values(:,2)));
d_p_3_val = double(subs(d_p_3, values(:,1), values(:,2)));
d_p_4_val = double(subs(d_p_4, values(:,1), values(:,2)));
d_x_val = double(subs(d_x, values(:,1), values(:,2)));
d_a_val = double(subs(d_a, values(:,1), values(:,2)));
d_v_val = double(subs(d_v, values(:,1), values(:,2)));
d_z_val = double(subs(d_z, values(:,1), values(:,2)));
d_h_1_val = double(subs(d_h_1, values(:,1), values(:,2)));
d_g_1_val = double(subs(d_g_1, values(:,1), values(:,2)));
d_s_1_val = double(subs(d_s_1, values(:,1), values(:,2)));
d_e_val = double(subs(d_e, values(:,1), values(:,2)));
d_l_val = double(subs(d_l, values(:,1), values(:,2)));
d_f_1_val = double(subs(d_f_1, values(:,1), values(:,2)));

% Definir valores utilizando una estructura

R0_value_numeric = double(subs(R_0_simpl, values(:,1), values(:,2)));

% Definir valores utilizando una estructura
parameters.delta = 0.0003996096;
parameters.gamma_1 = 0.5;
parameters.gamma_2 = 0;
parameters.ex = 0.7;
parameters.epsilon = 0.13;
parameters.sigma_1 = 0.7;
parameters.sigma_2 = 0.7;
parameters.ve = 1/4;
parameters.iota = 0;
parameters.ef_1 = 0.90;
parameters.ef_2 = 0;
parameters.ache_1 = 1/10;
parameters.ache_2 = 1/10;
parameters.psi_1 = 1/6;
parameters.psi_2 = 1/6;
parameters.psi_3 = 1/6;
parameters.psi_4 = 1/12;
parameters.lambda = 76;
parameters.alpha = 0.32;
parameters.zeta = 0.22;
parameters.omega = 0.78;

% Sensibilidad de índice estimación
index_d = d_d_val * (parameters.delta / R0_value_numeric);
index_p_1 = d_p_1_val * (parameters.psi_1 / R0_value_numeric);
index_p_2 = d_p_2_val * (parameters.psi_2 / R0_value_numeric);
index_p_3 = d_p_3_val * (parameters.psi_3 / R0_value_numeric);
index_p_4 = d_p_4_val * (parameters.psi_4 / R0_value_numeric);
index_x = d_x_val * (parameters.ex / R0_value_numeric);
index_a = d_a_val * (parameters.alpha / R0_value_numeric);
index_v = d_v_val * (parameters.ve / R0_value_numeric);
index_z = d_z_val * (parameters.zeta / R0_value_numeric);
index_h_1 = d_h_1_val * (parameters.ache_1 / R0_value_numeric);
index_g_1 = d_g_1_val * (parameters.gamma_1 / R0_value_numeric);
index_s_1 = d_s_1_val * (parameters.sigma_1 / R0_value_numeric);
index_e = d_e_val * (parameters.epsilon / R0_value_numeric);
index_l = d_l_val * (parameters.lambda / R0_value_numeric);
index_f_1 = d_f_1_val * (parameters.ef_1 / R0_value_numeric);

% Mostrar los índices de sensibilidad
fprintf('index_d: %.4f\n', index_d);
fprintf('index_l: %.4f\n', index_l);
fprintf('index_x: %.4f\n', index_x);
fprintf('index_z: %.4f\n', index_z);
fprintf('index_a: %.4f\n', index_a);
fprintf('index_v: %.4f\n', index_v);
fprintf('index_f_1: %.4f\n', index_f_1);
fprintf('index_e: %.4f\n', index_e);
fprintf('index_h_1: %.4f\n', index_h_1);
fprintf('index_p_4: %.4f\n', index_p_4);
fprintf('index_g_1: %.4f\n', index_g_1);
fprintf('index_s_1: %.4f\n', index_s_1);
fprintf('index_p_1: %.4f\n', index_p_1);
fprintf('index_p_3: %.4f\n', index_p_3);
fprintf('index_p_2: %.4f\n', index_p_2);
